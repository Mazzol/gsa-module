#!/usr/bin/env python

import numpy as np
from gsa_module import samples

__author__ = "Damar Wicaksono"


def main():
    # Get the command line arguments
    inputs = samples.cmdln_args.get_create_sample()

    # Generate the design matrix file
    if inputs["method"] == "srs":
        # Create simple random sampling design
        dm = samples.srs.create(inputs["num_samples"], inputs["num_dimensions"],
                                seed=inputs["seed_number"])
    elif inputs["method"] == "lhs":
        # Create Latin Hypercube Sampling design
        dm = samples.lhs.create(inputs["num_samples"], inputs["num_dimensions"],
                                seed=inputs["seed_number"])
    elif inputs["method"] == "sobol":
        # Create Sobol' quasirandom sequence design
        dm = samples.sobol.create(inputs["num_samples"],
                                  inputs["num_dimensions"],
                                  generator=inputs["sobol_generator"],
                                  dirnumfile=inputs["direction_numbers"],
                                  incl_nom=inputs["include_nominal"],
                                  randomize=inputs["randomize_sobol"])
    elif inputs["method"] == "lhs-opt":
        # Create an optimized latin hypercube design
        dm = samples.lhs_opt.create_ese(inputs["num_samples"],
                                        inputs["num_dimensions"],
                                        seed=inputs["seed_number"],
                                        max_outer=inputs["num_iterations"])

    # Save the design into file
    np.savetxt(inputs["filename"], dm,
               fmt="%1.6e", delimiter=inputs["delimiter"])


if __name__ == "__main__":
    main()
